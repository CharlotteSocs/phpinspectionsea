<idea-plugin version="2">
  <id>com.kalessil.phpStorm.phpInspectionsEA</id>
  <name>Php Inspections (EA Extended)</name>
  <version>1.3.10</version>
  <vendor email="kalessil@gmail.com">Vladimir Reznichenko</vendor>

  <depends>com.jetbrains.php</depends>
  <depends>com.intellij.modules.platform</depends>

  <!-- http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="143.1480" />
  <!-- SDKs:
    141.2462 — 141.2462  PS 9.0.2      -> 1.3.9   [ok]
    143.382  — 143.382   PS 10.0.1     -> 1.3.9.1 [ok]
    143.1184 — 143.1184  PS 10.0.2     -> 1.3.9.2 [ok]

    143.1480 — *         PS 10.0.3/EAP -> 1.3.9.3 [ok]
    138.2001 — 138.2001  PS 8.0.3      -> not supported anymore (PHP 7 related classes)
  -->

  <description><![CDATA[
For support and donations please visit <a href="https://bitbucket.org/kalessil/phpinspectionsea">Bitbucket</a> | <a href="https://bitbucket.org/kalessil/phpinspectionsea/issues">Issues</a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=RK7DPPHTSZXTA">PayPal</a>.<br />
<br />
Please follow me at <a href="https://twitter.com/kalessil">twitter</a> for status updates.<br />
<br />
This plugin is a Static Code Analysis tool for PHP (aka inspections in JetBrains products).<br />
<br />
It covers:<br />
- architecture related issues (e.g. design pattern violations)<br />
- possible code construct simplifications<br />
- weak types control (important in Enterprise Applications)<br />
- performance issues<br />
- non-optimal, duplicate and suspicious "if" conditions<br />
- validation of magic methods usage<br />
- regular expressions<br />
- validation of exception handling workflow<br />
- compatibility issues<br />
- variety of time-consuming bugs<br />
<br />
Some of inspections are expecting conditional statements (e.g. "if") to use
group statement for wrapping body expressions. If this requirement is met
then additional inspections are applied to the source code.<br />
<br />
For Mac shortcuts, see <a href="https://www.jetbrains.com/phpstorm/help/keyboard-shortcuts-and-mouse-reference.html">this reference card</a>. Windows/Linux ones are:<br />
<b>Alt + Shift + I</b> to <b>inspect current file</b> with current profile<br />
<b>Ctrl + Shift + F4</b> to <b>close results</b> of inspection.<br />
<br />
On some projects CPU and therefore battery usage could be intensive, so it should be taken into account when traveling
with a laptop.
    ]]></description>

  <change-notes><![CDATA[
26 Jan 2016: bug-fixes<br/>
<br/>
    - Reference mismatch: run only when language level is below PHP7;<br/>
    - One-time use variables: fix false-positives with return by reference;<br/>
    - Senseless proxy function: fix false-positives with visibility change;<br/>
    - Exceptions handling and annotating: case insensitive Inheritdoc analysis applied;<br/>
    - Inconsistent 'http_build_query(...)' result: resolved project startup exception;<br/>
    - 'strtr(...)' could be replaced with 'str_replace(...)': fix false-positives with multy-character patterns;<br/>
<br/>
<hr/>
  ]]></change-notes>

  <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
       on how to target different products -->
  <!-- uncomment to enable plugin in all products
  <depends>com.intellij.modules.lang</depends>
  -->

  <extensions defaultExtensionNs="com.intellij">
    <localInspection language="PHP" groupPath="PHP"
        shortName="IsNullFunctionUsageInspection"                 displayName="Performance: 'is_null(...)' could be replaced by '... === null'"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.IsNullFunctionUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="dirnameCallOnFileConstantInspection"           displayName="Performance: 'dirname(...)' could be replaced by '__DIR__'"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.DirnameCallOnFileConstantInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="AmbiguousMethodsCallsInArrayMappingInspection" displayName="Performance: non-optimized arrays mapping"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.AmbiguousMethodsCallsInArrayMappingInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="SequentialUnSetCallsInspection"                displayName="Performance: 'unset(...)' calls could be merged"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.SequentialUnSetCallsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrlenInEmptyStringCheckContextInspection"     displayName="Performance: 'strlen(...)' should not be used to check if string is empty"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.StrlenInEmptyStringCheckContextInspection"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="TypesCastingWithFunctionsInspection"           displayName="Performance: type casting via PHP4 functions"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.TypesCastingWithFunctionsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ArrayCastingEquivalentInspection"              displayName="Performance: could be replaced with '(array) ...'"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.ArrayCastingEquivalentInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="CountOnPropelCollectionInspection"             displayName="Performance: 'count(...)' calls on Propel collection"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.propel16.CountOnPropelCollectionInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="CallableInLoopTerminationConditionInspection"  displayName="Performance: callable calls in loops termination condition"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.CallableInLoopTerminationConditionInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="SlowArrayOperationsInLoopInspection"           displayName="Performance: slow array function used in loop"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.SlowArrayOperationsInLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ArraySearchUsedAsInArrayInspection"            displayName="Performance: 'array_search(...)' could be replaced by 'in_array(...)'"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.ArraySearchUsedAsInArrayInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrStrUsedAsStrPosInspection"                  displayName="Performance: 'strstr(...)/stristr(...)' could be replaced with 'strpos(...)/stripos(...)'"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strpos.StrStrUsedAsStrPosInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrNcmpUsedAsStrPosInspection"                 displayName="Performance: 'strncmp(...)/strncasecmp(...)' could be replaced with 'strpos(...)/stripos(...)'"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strpos.StrNcmpUsedAsStrPosInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="SubStrUsedAsStrPosInspection"                  displayName="Performance: 'substr(...)' could be replaced with 'strpos(...)'"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strpos.SubStrUsedAsStrPosInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrTrUsageAsStrReplaceInspection"              displayName="Performance: 'strtr(...)' could be replaced with 'str_replace(...)'"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.StrTrUsageAsStrReplaceInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="CaseInsensitiveStringFunctionsMissUseInspection" displayName="Performance: 'stristr(...)/stripos()/strripos()' could be replaced with 'strstr(...)/strpos()/strrpos()'"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.CaseInsensitiveStringFunctionsMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="OpAssignShortSyntaxInspection"                 displayName="Performance: short syntax for applied operation"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.OpAssignShortSyntaxInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="AlterInForeachInspection"                      displayName="Performance: slow alter in foreach"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.AlterInForeachInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ForeachOnArrayComponentsInspection"            displayName="Performance: array_keys(...), array_values(...) used as foreach array"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.ForeachOnArrayComponentsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="CascadeStringReplacementInspection"            displayName="Performance: cascading str_replace(...) calls"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.CascadeStringReplacementInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="InArrayMissUseInspection"                      displayName="Performance: in_array(...) misused"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.InArrayMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="LowPerformanceArrayUniqueUsageInspection"      displayName="Performance: array_unique() low performing usage"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.LowPerformanceArrayUniqueUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ArrayPushMissUseInspection"                    displayName="Performance: array_push(...) misused"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.ArrayPushMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="NotOptimalRegularExpressionsInspection"        displayName="Performance: non-optimal regular expression"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.regularExpressions.NotOptimalRegularExpressionsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="VariableFunctionsUsageInspection"              displayName="Performance: variable functions usage"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.VariableFunctionsUsageInspector"/>

    <localInspection language="PHP" groupPath="PHP"
        shortName="IsEmptyFunctionUsageInspection"                displayName="Type compatibility: 'empty(...)' usage"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.IsEmptyFunctionUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="TypeUnsafeComparisonInspection"                displayName="Type compatibility: type unsafe comparison"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.TypeUnsafeComparisonInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="TypeUnsafeArraySearchInspection"               displayName="Type compatibility: 'in_array(...)', 'array_search()' type unsafe usage"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.TypeUnsafeArraySearchInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ArrayTypeOfParameterByDefaultValueInspection"  displayName="Type compatibility: parameter could be declared as array"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictInterfaces.ArrayTypeOfParameterByDefaultValueInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ForeachSourceInspection"                       displayName="Type compatibility: foreach source to iterate over"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="false" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.ForeachSourceInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="GenericObjectTypeUsageInspection"              displayName="Type compatibility: usage of object type in PhpDoc"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.phpDoc.GenericObjectTypeUsageInspector"/>

    <localInspection language="PHP" groupPath="PHP"
        shortName="UnSafeIsSetOverArrayInspection"                displayName="Control flow: 'isset(...)' usage"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.UnSafeIsSetOverArrayInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="TernaryOperatorSimplifyInspection"             displayName="Control flow: ternary operator could be simplified"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.TernaryOperatorSimplifyInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="IfReturnReturnSimplificationInspection"        displayName="Control flow: if-return-return could be simplified"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.IfReturnReturnSimplificationInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="DefaultValueInElseBranchInspection"            displayName="Control flow: default value is hidden in else branch"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.DefaultValueInElseBranchInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="NotOptimalIfConditionsInspection"              displayName="Control flow: non-optimal if conditions"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.NotOptimalIfConditionsInspection"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="LoopWhichDoesNotLoopInspection"                displayName="Control flow: loop which does not loop"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.LoopWhichDoesNotLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ThrowRawExceptionInspection"                   displayName="Control flow: general '\Exception' is thrown"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.ThrowRawExceptionInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="DisconnectedForeachInstructionInspection"      displayName="Control flow: statement could be decoupled from foreach"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.DisconnectedForeachInstructionInspector"/>
  <localInspection language="PHP" groupPath="PHP"
       shortName="ExceptionsAnnotatingAndHandlingInspection"      displayName="Control flow: exceptions handling and annotating"
       groupName="Php Inspections (EA Extended)"                  enabledByDefault="true" level="WARNING"
       implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.exceptionsWorkflow.ExceptionsAnnotatingAndHandlingInspector"/>
  <localInspection language="PHP" groupPath="PHP"
       shortName="DegradedSwitchInspection"                       displayName="Control flow: switch-case could be simplified"
       groupName="Php Inspections (EA Extended)"                  enabledByDefault="true" level="WEAK WARNING"
       implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.DegradedSwitchInspector"/>
  <localInspection language="PHP" groupPath="PHP"
       shortName="ForeachInvariantsInspection"                    displayName="Control flow: foreach usage possible"
       groupName="Php Inspections (EA Extended)"                  enabledByDefault="true" level="WARNING"
       implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.ForeachInvariantsInspector"/>
  <localInspection language="PHP" groupPath="PHP"
       shortName="OneTimeUseVariablesInspection"                  displayName="Control flow: one-time use variables"
       groupName="Php Inspections (EA Extended)"                  enabledByDefault="true" level="WARNING"
       implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.OneTimeUseVariablesInspector"/>
  <localInspection language="PHP" groupPath="PHP"
       shortName="PdoApiUsageInspection"                          displayName="Control flow: PDO api usage"
       groupName="Php Inspections (EA Extended)"                  enabledByDefault="true" level="WARNING"
       implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.PdoApiUsageInspector"/>

    <localInspection language="PHP" groupPath="PHP"
        shortName="ForgottenDebugOutputInspection"                displayName="Probable bug: forgotten debug statements"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.ForgottenDebugOutputInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="AdditionOperationOnArraysInspection"           displayName="Probable bug: addition operator used on arrays"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.AdditionOperationOnArraysInspection"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="MagicMethodsValidityInspection"                displayName="Probable bug: magic methods validity"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.magicMethods.MagicMethodsValidityInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="SuspiciousLoopInspection"                      displayName="Probable bug: suspicious loop"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SuspiciousLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ReferenceMismatchInspection"                   displayName="Probable bug: reference mismatch"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.ReferenceMismatchInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ImplicitMagicMethodCallInspection"             displayName="Probable bug: implicit magic method calls"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.magicMethods.ImplicitMagicMethodCallInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="NonSecureUniqidUsageInspection"                displayName="Probable bug: insecure 'uniqid()' usage"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.NonSecureUniqidUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="SwitchContinuationInLoopInspection"            displayName="Probable bug: continue misbehaviour in switch"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.SwitchContinuationInLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="PrintfScanfArgumentsInspection"                displayName="Probable bug: *printf/*scanf arguments count mismatches"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.PrintfScanfArgumentsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="RealpathOnRelativePathsInspection"             displayName="Probable bug: phar-incompatible 'realpath()' applied to a relative path"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.RealpathOnRelativePathsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="OffsetOperationsInspection"                    displayName="Probable bugs: array and string offset validity"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.OffsetOperationsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="SummerTimeUnsafeTimeManipulationInspection"    displayName="Probable bugs: summer-time unsafe date manipulations"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SummerTimeUnsafeTimeManipulationInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="MkdirRaceConditionInspection"                  displayName="Probable bugs: mkdir(...) race condition"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.MkdirRaceConditionInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="InconsistentQueryBuildInspection"              displayName="Probable bugs: inconsistent 'http_build_query(...)' result"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.InconsistentQueryBuildInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="IncorrectRandomRangeInspection"                displayName="Probable bugs: incorrect random generation range"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.IncorrectRandomRangeInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="UntrustedInclusionInspection"                  displayName="Probable bugs: untrusted files inclusion"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.UntrustedInclusionInspector"/>

    <localInspection language="PHP" groupPath="PHP"
        shortName="PhpUnitTestsInspection"                        displayName="PhpUnit: bugs and best practices"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.phpUnit.PhpUnitTestsInspector"/>

    <localInspection language="PHP" groupPath="PHP"
        shortName="SenselessTernaryOperatorInspection"            displayName="Confusing constructs: suspicious ternary operator"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.SenselessTernaryOperatorInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ClassMethodNameMatchesFieldNameInspection"     displayName="Confusing constructs: method name matches existing field name"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.ClassMethodNameMatchesFieldNameInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="SenselessProxyMethodInspection"                displayName="Confusing constructs: senseless proxy function"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SenselessProxyMethodInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="NestedTernaryOperatorInspection"               displayName="Confusing constructs: nested ternary operator"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.NestedTernaryOperatorInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="UselessReturnInspection"                       displayName="Confusing constructs: useless return"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.UselessReturnInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ParameterByRefWithDefaultInspection"           displayName="Confusing constructs: parameter passed by reference has default value"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ParameterByRefWithDefaultInspector"/>

    <localInspection language="PHP" groupPath="PHP"
        shortName="OnlyWritesOnParameterInspection"               displayName="Unused: parameter/variable is not used"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.OnlyWritesOnParameterInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="AmbiguousMemberInitializationInspection"       displayName="Unused: ambiguous class property initialization"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.AmbiguousMemberInitializationInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="UselessUnsetInspection"                        displayName="Unused: useless unset"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.UselessUnsetInspector"/>

    <localInspection language="PHP" groupPath="PHP"
        shortName="UnNecessaryDoubleQuotesInspection"             displayName="Code style: unnecessary double quotes"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.UnNecessaryDoubleQuotesInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="IfConditionalsWithoutCurvyBracketsInspection"  displayName="Code style: missing or empty conditionals group statement"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.IfConditionalsWithoutGroupStatementInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="SenselessCommaInArrayDefinitionInspection"     displayName="Code style: unnecessary last comma in array definition"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.SenselessCommaInArrayDefinitionInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ElvisOperatorCanBeUsedInspection"              displayName="Code style: elvis operator can be used"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ElvisOperatorCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="NullCoalescingOperatorCanBeUsedInspection"     displayName="Code style: null coalescing operator can be used"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.NullCoalescingOperatorCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="AccessModifierPresentedInspection"             displayName="Code style: access modifiers shall be defined"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.AccessModifierPresentedInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="PrefixedIncDecrementEquivalentInspection"       displayName="Code style: prefixed increment/decrement equivalent"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.PrefixedIncDecrementEquivalentInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="CallableReferenceNameMismatchInspection"       displayName="Code style: callable name case mismatched in a call"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.CallableReferenceNameMismatchInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="NestedPositiveIfStatementsInspection"          displayName="Code style: nested positive ifs"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.earlyReturns.NestedPositiveIfStatementsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ReferencingObjectsInspection"                  displayName="Code style: referencing objects"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.ReferencingObjectsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StaticInvocationViaThisInspection"             displayName="Code style: static methods invocation via '->'"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.StaticInvocationViaThisInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="NestedNotOperatorsInspection"                  displayName="Code style: nested not operators usage"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.NestedNotOperatorsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="UnnecessaryParenthesesInspection"              displayName="Code style: unnecessary parentheses"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UnnecessaryParenthesesInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="UnnecessarySemicolonInspection"                displayName="Code style: unnecessary semicolon"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UnnecessarySemicolonInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="UnnecessaryUseAliasInspection"                 displayName="Code style: unnecessary aliases"
        groupName="Php Inspections (EA Extended)"                 enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UnnecessaryUseAliasInspector"/>


    <localInspection language="PHP" groupPath="PHP"
        shortName="BadExceptionsProcessingInspection"               displayName="Architecture: badly organized exception handling"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.BadExceptionsProcessingInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="MoreThanThreeArgumentsInspection"                displayName="Architecture: more than 3 parameters in callable"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.MoreThanThreeArgumentsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="CallableParameterUseCaseInTypeContextInspection" displayName="Architecture: callable parameter usage violates definition"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.CallableParameterUseCaseInTypeContextInspection"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ClassReImplementsParentInterfaceInspection"      displayName="Architecture: class re-implements interface of a parent class"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.ClassReImplementsParentInterfaceInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="ClassOverridesFieldOfSuperClassInspection"       displayName="Architecture: class overrides a field of a parent class"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.ClassOverridesFieldOfSuperClassInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="SingletonFactoryPatternViolationInspection"      displayName="Architecture: class violates singleton/factory pattern definition"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SingletonFactoryPatternViolationInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="PrivateConstructorSemanticsInspection"           displayName="Architecture: private constructor semantics"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.PrivateConstructorSemanticsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="LongInheritanceChainInspection"                  displayName="Architecture: long inheritance chain"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.LongInheritanceChainInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="PropertyCanBeStaticInspection"                   displayName="Architecture: property could be static"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.PropertyCanBeStaticInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="EmptyClassInspection"                            displayName="Architecture: empty class"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.EmptyClassInspector"/>

    <localInspection language="PHP" groupPath="PHP"
        shortName="AliasFunctionsUsageInspection"                   displayName="Compatibility: alias functions usage"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.AliasFunctionsUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="DeprecatedConstructorStyleInspection"            displayName="Compatibility: deprecated constructor style"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.DeprecatedConstructorStyleInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="DeprecatedIniOptionsInspection"                  displayName="Compatibility: deprecated configuration options"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.DeprecatedIniOptionsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="RandomApiMigrationInspection"                    displayName="Compatibility: random API migration"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.RandomApiMigrationInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="MktimeUsageInspection"                           displayName="Compatibility: 'gmmktime()'/'mktime()' usage"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.MktimeUsageInspection"/>

    <!--localInspection language="PHP" groupPath="PHP"
        shortName="StrictArgumentsInspection"                       displayName="Type compatibility: check types of call arguments"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictArgumentsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictArithmeticInspection"                      displayName="Type compatibility: numeric operands in arithmetic operations"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictArithmeticInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictAssignmentInspection"                      displayName="Type compatibility: match types in assignments"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictAssignmentInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictBitwiseInspection"                         displayName="Type compatibility: integer operands in bitwise operators"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictBitwiseInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictBooleanNotInspection"                      displayName="Type compatibility: boolean operand in logical 'not' operator"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictBooleanNotInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictComparisonInspection"                      displayName="Type compatibility: numeric operands in less/greater comparisons"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictComparisonInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictEqualityInspection"                        displayName="Type compatibility: match types in equality comparisons"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictEqualityInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictIncrementInspection"                       displayName="Type compatibility: increment/decrement of integers only"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictIncrementInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictLogicalInspection"                         displayName="Type compatibility: boolean operands in logical operators"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictLogicalInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictReturnInspection"                          displayName="Type compatibility: check type of return value"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictReturnInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictStringConcatInspection"                    displayName="Type compatibility: string operands in string concatenation"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictStringConcatInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictTernaryInspection"                         displayName="Type compatibility: match types in branches of ternary operator"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictTernaryInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictUnaryMinusInspection"                      displayName="Type compatibility: numeric operand in unary minus operator"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictUnaryMinusInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictUnaryPlusInspection"                       displayName="Type compatibility: unary plus operator"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictUnaryPlusInspector"/-->
  </extensions>

  <application-components>
    <!-- Add your application components here -->
  </application-components>

  <project-components>
    <!-- Add your project components here -->
  </project-components>

  <actions>
    <!-- Add your actions here -->
  </actions>

</idea-plugin>