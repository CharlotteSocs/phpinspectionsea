<idea-plugin version="2">
  <id>com.kalessil.phpStorm.phpInspectionsEA</id>
  <name>Php Inspections (EA Extended)</name>
  <version>1.5.6</version>
  <vendor email="kalessil@gmail.com">Vladimir Reznichenko</vendor>

  <depends>com.jetbrains.php</depends>
  <depends>com.intellij.modules.platform</depends>

  <!-- http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="162.1889" />
  <!-- SDKs:
     162.1889                           -> PhpStorm 2016.2.1

    141.2462 — 141.2462  PS 9.0.2      -> 1.3.9   [ok]
    143.382  — 143.382   PS 10.0.1     -> 1.3.9.1 [ok]
    143.1184 — 143.1184  PS 10.0.2     -> 1.3.9.2 [ok]

    143.1480 — *         PS 10.0.3/EAP -> 1.3.10  [ok]
    138.2001 — 138.2001  PS 8.0.3      -> not supported anymore (PHP 7 related classes)
  -->

  <description><![CDATA[
For support and donations please visit <a href="https://bitbucket.org/kalessil/phpinspectionsea">Bitbucket</a> | <a href="https://bitbucket.org/kalessil/phpinspectionsea/issues">Issues</a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=RK7DPPHTSZXTA">PayPal</a>.<br />
<br />
Please follow me at <a href="https://twitter.com/kalessil">twitter</a> for status updates.<br />
<br />
This plugin is a Static Code Analysis tool for PHP (aka inspections in JetBrains products).<br />
<br />
It covers:<br />
- architecture related issues (e.g. design pattern violations)<br />
- possible code construct simplifications<br />
- weak types control (important in Enterprise Applications)<br />
- performance issues<br />
- non-optimal, duplicate and suspicious "if" conditions<br />
- validation of magic methods usage<br />
- regular expressions<br />
- validation of exception handling workflow<br />
- compatibility issues<br />
- variety of time-consuming bugs<br />
- PhpUnit API usage<br />
<br />
Some of inspections are expecting conditional statements (e.g. "if") to use
group statement for wrapping body expressions. If this requirement is met
then additional inspections are applied to the source code.<br />
<br />
For Mac shortcuts, see <a href="https://www.jetbrains.com/phpstorm/help/keyboard-shortcuts-and-mouse-reference.html">this reference card</a>. Windows/Linux ones are:<br />
<b>Alt + Shift + I</b> to <b>inspect current file</b> with current profile<br />
<b>Ctrl + Shift + F4</b> to <b>close results</b> of inspection.<br />
<br />
On some projects CPU and therefore battery usage could be intensive, so it should be taken into account when traveling
with a laptop.
    ]]></description>

  <change-notes><![CDATA[
23 October 2016: improvements and new inspections<br/>
<br/>
    - Documentation updated: thank you <a href="https://github.com/samdark">@samdark</a>;<br/>
    - More than 3 parameters in callable: added settings (threshold, ignore constructors);<br/>
    - Access modifiers shall be defined: added settings (analyze interfaces);<br/>
    - Slow alter in foreach: added settings (suggest using variable by reference);<br/>
    - Static methods invocation via '->': follow PHPUnit best practices (do not report it's assert* methods);<br/>
    - Implicit magic method calls: added settings (suggest using string casting);<br/>
    <br/>
    - Unnecessary parentheses: resolved false-positives (clone-expression);<br/>
    - Loop which does not loop: resolved false-positives;<br/>
    - Non-optimal if conditions: resolved false-positives (conditions interconnected with array variables);<br/>
    - PDO api usage: resolved false-positives (bulk execution of prepared statement);<br/>
    - One-time use variables: resolved false-positives (self-assignments);<br/>
    - Forgotten debug statements: resolved false-positives (preceding ob_start());<br/>
    - Implicit magic method calls: resolved false-positives (__construct in serialize);<br/>
    - If-return-return could be simplified: resolved false-positives (preceding if-return);<br/>
    <br/>
    - 'gettype(...)' could be replaced with 'is_*(...)': implemented;<br/>
    - Unused constructor dependencies: implemented (thank you <a href="https://github.com/funivan">@funivan</a>);<br/>
<br/>
<hr/>
  ]]></change-notes>

  <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
       on how to target different products -->
  <!-- uncomment to enable plugin in all products
  <depends>com.intellij.modules.lang</depends>
  -->

  <extensions defaultExtensionNs="com.intellij">
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IsNullFunctionUsageInspection"                 displayName="'is_null(...)' could be replaced by 'null === ...'"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.IsNullFunctionUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="dirnameCallOnFileConstantInspection"           displayName="'dirname(...)' could be replaced by '__DIR__'"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.DirnameCallOnFileConstantInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AmbiguousMethodsCallsInArrayMappingInspection" displayName="Non-optimized arrays mapping"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.AmbiguousMethodsCallsInArrayMappingInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SequentialUnSetCallsInspection"                displayName="'unset(...)' calls could be merged"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.SequentialUnSetCallsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StrlenInEmptyStringCheckContextInspection"     displayName="'strlen(...)' should not be used to check if string is empty"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.StrlenInEmptyStringCheckContextInspection"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="TypesCastingWithFunctionsInspection"           displayName="Type casting via PHP4 functions"
        groupName="Performance"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.TypesCastingWithFunctionsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ArrayCastingEquivalentInspection"              displayName="Could be replaced with '(array) ...'"
        groupName="Performance"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.ArrayCastingEquivalentInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CountOnPropelCollectionInspection"             displayName="'count(...)' calls on Propel collection"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.propel16.CountOnPropelCollectionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CallableInLoopTerminationConditionInspection"  displayName="Callable calls in loops termination condition"
        groupName="Performance"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.CallableInLoopTerminationConditionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SlowArrayOperationsInLoopInspection"           displayName="Slow array function used in loop"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.SlowArrayOperationsInLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ArraySearchUsedAsInArrayInspection"            displayName="'array_search(...)' could be replaced by 'in_array(...)'"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.ArraySearchUsedAsInArrayInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StrStrUsedAsStrPosInspection"                  displayName="'strstr(...)/stristr(...)' could be replaced with 'strpos(...)/stripos(...)'"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strpos.StrStrUsedAsStrPosInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StrNcmpUsedAsStrPosInspection"                 displayName="'strncmp(...)/strncasecmp(...)' could be replaced with 'strpos(...)/stripos(...)'"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strpos.StrNcmpUsedAsStrPosInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SubStrUsedAsStrPosInspection"                  displayName="'substr(...)' could be replaced with 'strpos(...)'"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strpos.SubStrUsedAsStrPosInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StrTrUsageAsStrReplaceInspection"              displayName="'strtr(...)' could be replaced with 'str_replace(...)'"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.StrTrUsageAsStrReplaceInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CaseInsensitiveStringFunctionsMissUseInspection" displayName="'stristr(...)/stripos(...)/strripos(...)' could be replaced with 'strstr(...)/strpos()/strrpos()'"
        groupName="Performance"                                     enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.CaseInsensitiveStringFunctionsMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="OpAssignShortSyntaxInspection"                 displayName="Short syntax for applied operation"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.OpAssignShortSyntaxInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AlterInForeachInspection"                      displayName="Slow alter in foreach"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.AlterInForeachInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ForeachOnArrayComponentsInspection"            displayName="'array_keys(...)/array_values(...)' used as foreach array"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.ForeachOnArrayComponentsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CascadeStringReplacementInspection"            displayName="Cascading 'str_replace(...)' calls"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.CascadeStringReplacementInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="InArrayMissUseInspection"                      displayName="'in_array(...)' misused"
        groupName="Performance"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.InArrayMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="LowPerformanceArrayUniqueUsageInspection"      displayName="'array_unique(...)' low performing usage"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.LowPerformanceArrayUniqueUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ArrayPushMissUseInspection"                    displayName="'array_push(...)' misused"
        groupName="Performance"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.ArrayPushMissUseInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NotOptimalRegularExpressionsInspection"        displayName="Non-optimal regular expression"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.regularExpressions.NotOptimalRegularExpressionsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="VariableFunctionsUsageInspection"              displayName="Variable functions usage"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.VariableFunctionsUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SubStrShortHandUsageInspection"                displayName="'substr(...)' short-hand usage"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strpos.SubStrShortHandUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SubStrUsedAsArrayAccessInspection"             displayName="'substr(...)' used as index-based access"
        groupName="Performance"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.strpos.SubStrUsedAsArrayAccessInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IsEmptyFunctionUsageInspection"                displayName="'empty(...)' usage"
        groupName="Type compatibility"                            enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.IsEmptyFunctionUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="TypeUnsafeComparisonInspection"                displayName="Type unsafe comparison"
        groupName="Type compatibility"                            enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.TypeUnsafeComparisonInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="TypeUnsafeArraySearchInspection"               displayName="'in_array(...)', 'array_search()' type unsafe usage"
        groupName="Type compatibility"                            enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.TypeUnsafeArraySearchInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ArrayTypeOfParameterByDefaultValueInspection"  displayName="Parameter could be declared as array"
        groupName="Type compatibility"                            enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictInterfaces.ArrayTypeOfParameterByDefaultValueInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ForeachSourceInspection"                       displayName="Foreach source to iterate over"
        groupName="Type compatibility"                            enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.ForeachSourceInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="GenericObjectTypeUsageInspection"              displayName="Usage of object type in PhpDoc"
        groupName="Type compatibility"                            enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.phpDoc.GenericObjectTypeUsageInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnSafeIsSetOverArrayInspection"                displayName="'isset(...)' usage"
        groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.UnSafeIsSetOverArrayInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="TernaryOperatorSimplifyInspection"             displayName="Ternary operator could be simplified"
        groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.TernaryOperatorSimplifyInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IfReturnReturnSimplificationInspection"        displayName="If-return-return could be simplified"
        groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.ifs.IfReturnReturnSimplificationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DefaultValueInElseBranchInspection"            displayName="Default value is hidden in else branch"
        groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.DefaultValueInElseBranchInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NotOptimalIfConditionsInspection"              displayName="Non-optimal if conditions"
        groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.ifs.NotOptimalIfConditionsInspection"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="LoopWhichDoesNotLoopInspection"                displayName="Loop which does not loop"
        groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.LoopWhichDoesNotLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ThrowRawExceptionInspection"                   displayName="General '\Exception' is thrown"
        groupName="Control Flow"                                  enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.ThrowRawExceptionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DisconnectedForeachInstructionInspection"      displayName="Statement could be decoupled from foreach"
        groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.DisconnectedForeachInstructionInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ExceptionsAnnotatingAndHandlingInspection"      displayName="Exceptions handling and annotating"
        groupName="Control Flow"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.exceptionsWorkflow.ExceptionsAnnotatingAndHandlingInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DegradedSwitchInspection"                       displayName="Switch-case could be simplified"
        groupName="Control Flow"                                   enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.DegradedSwitchInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ForeachInvariantsInspection"                    displayName="Foreach usage possible"
        groupName="Control Flow"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.ForeachInvariantsInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="OneTimeUseVariablesInspection"                  displayName="One-time use variables"
        groupName="Control Flow"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.OneTimeUseVariablesInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PdoApiUsageInspection"                          displayName="PDO api usage"
        groupName="Control Flow"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.PdoApiUsageInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MultiAssignmentUsageInspection"                 displayName="'list(...) = ' usage possible"
        groupName="Control Flow"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.MultiAssignmentUsageInspector"/>
  <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
         shortName="GetTypeMissUseInspection"                      displayName="'gettype(...)' could be replaced with 'is_*(...)'"
         groupName="Control Flow"                                  enabledByDefault="true" level="WARNING"
         implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.GetTypeMissUseInspector"/>
  <!--localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
       shortName="ArrayFunctionsInvariantsInspection"             displayName="Foreach behaves as an array function"
       groupName="Control Flow"                                   enabledByDefault="true" level="WARNING"
       implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.forEach.ArrayFunctionsInvariantsInspector"/-->


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ForgottenDebugOutputInspection"                displayName="Forgotten debug statements"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.debug.ForgottenDebugOutputInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AdditionOperationOnArraysInspection"           displayName="Addition operator used on arrays"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.AdditionOperationOnArraysInspection"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MagicMethodsValidityInspection"                displayName="Magic methods validity"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.magicMethods.MagicMethodsValidityInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SuspiciousLoopInspection"                      displayName="Suspicious loop"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SuspiciousLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ReferenceMismatchInspection"                   displayName="Reference mismatch"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.ReferenceMismatchInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ImplicitMagicMethodCallInspection"             displayName="Implicit magic method calls"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.magicMethods.ImplicitMagicMethodCallInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NonSecureUniqidUsageInspection"                displayName="Insecure 'uniqid(...)' usage"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.security.NonSecureUniqidUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NonSecureParseStrUsageInspection"              displayName="Insecure 'parse_str(...)' usage"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.security.NonSecureParseStrUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NonSecureExtractUsageInspection"               displayName="Insecure 'extract(...)' usage"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.security.NonSecureExtractUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SwitchContinuationInLoopInspection"            displayName="Continue misbehaviour in switch"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.SwitchContinuationInLoopInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PrintfScanfArgumentsInspection"                displayName="*printf/*scanf arguments count mismatches"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.PrintfScanfArgumentsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="RealpathOnRelativePathsInspection"             displayName="Phar-incompatible 'realpath()' applied to a relative path"
        groupName="Probable bugs"                                 enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.RealpathOnRelativePathsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="OffsetOperationsInspection"                    displayName="Array and string offset validity"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.OffsetOperationsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SummerTimeUnsafeTimeManipulationInspection"    displayName="Summer-time unsafe date manipulations"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SummerTimeUnsafeTimeManipulationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MkdirRaceConditionInspection"                  displayName="'mkdir(...)' race condition"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.MkdirRaceConditionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="InconsistentQueryBuildInspection"              displayName="Inconsistent 'http_build_query(...)' result"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.InconsistentQueryBuildInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IncorrectRandomRangeInspection"                displayName="Incorrect random generation range"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.IncorrectRandomRangeInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UntrustedInclusionInspection"                  displayName="Untrusted files inclusion"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.UntrustedInclusionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SuspiciousSemicolonInspection"                 displayName="Suspicious semicolon"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SuspiciousSemicolonInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CompactArgumentsInspection"                    displayName="'compact(...)' variables existence"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.CompactArgumentsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DispatchingThisIntoClosuresInspection"         displayName="Incorrect dispatching $this into closures"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.DispatchingThisIntoClosuresInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UsingInclusionOnceReturnValueInspection"       displayName="Suspicious usage of include_once/require_once return value"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.UsingInclusionOnceReturnValueInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DateIntervalSpecificationInspection"           displayName="Date interval specification validity"
        groupName="Probable bugs"                                 enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.DateIntervalSpecificationInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PhpUnitTestsInspection"                        displayName="PhpUnit: bugs and best practices"
        groupName="PhpUnit"                                       enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.phpUnit.PhpUnitTestsInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SenselessTernaryOperatorInspection"            displayName="Suspicious ternary operator"
        groupName="Confusing constructs"                          enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.SenselessTernaryOperatorInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ClassMethodNameMatchesFieldNameInspection"     displayName="Method name matches existing field name"
        groupName="Confusing constructs"                          enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.ClassMethodNameMatchesFieldNameInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SenselessProxyMethodInspection"                displayName="Senseless proxy function"
        groupName="Confusing constructs"                          enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SenselessProxyMethodInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NestedTernaryOperatorInspection"               displayName="Nested ternary operator"
        groupName="Confusing constructs"                          enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.NestedTernaryOperatorInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UselessReturnInspection"                       displayName="Useless return"
        groupName="Confusing constructs"                          enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.UselessReturnInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ParameterByRefWithDefaultInspection"           displayName="Parameter passed by reference has default value"
        groupName="Confusing constructs"                          enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ParameterByRefWithDefaultInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ReferencingObjectsInspection"                  displayName="Referencing objects"
        groupName="Confusing constructs"                          enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.ReferencingObjectsInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="OnlyWritesOnParameterInspection"               displayName="Parameter/variable is not used"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.OnlyWritesOnParameterInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AmbiguousMemberInitializationInspection"       displayName="Ambiguous class property initialization"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.AmbiguousMemberInitializationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UselessUnsetInspection"                        displayName="Useless unset"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.UselessUnsetInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnnecessaryPropertyDependenciesInspection"     displayName="Unused constructor dependencies"
        groupName="Unused"                                        enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.UnusedConstructorDependenciesInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnNecessaryDoubleQuotesInspection"             displayName="Unnecessary double quotes"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.UnNecessaryDoubleQuotesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="IfConditionalsWithoutCurvyBracketsInspection"  displayName="Missing or empty conditionals group statement"
        groupName="Code Style"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.IfConditionalsWithoutGroupStatementInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SenselessCommaInArrayDefinitionInspection"     displayName="Unnecessary last comma in array definition"
        groupName="Code Style"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.SenselessCommaInArrayDefinitionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ElvisOperatorCanBeUsedInspection"              displayName="Elvis operator can be used"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ElvisOperatorCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NullCoalescingOperatorCanBeUsedInspection"     displayName="Null coalescing operator can be used"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.NullCoalescingOperatorCanBeUsedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AccessModifierPresentedInspection"             displayName="Access modifiers shall be defined"
        groupName="Code Style"                                    enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.AccessModifierPresentedInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PrefixedIncDecrementEquivalentInspection"      displayName="Prefixed increment/decrement equivalent"
        groupName="Code Style"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.PrefixedIncDecrementEquivalentInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CallableReferenceNameMismatchInspection"       displayName="Callable name case mismatched in a call"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.CallableReferenceNameMismatchInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NestedPositiveIfStatementsInspection"          displayName="Nested positive ifs"
        groupName="Code Style"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.ifs.NestedPositiveIfStatementsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="StaticInvocationViaThisInspection"             displayName="Static methods invocation via '->'"
        groupName="Code Style"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.StaticInvocationViaThisInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DynamicInvocationViaScopeResolutionInspection" displayName="Dynamic methods invocation via '::'"
        groupName="Code Style"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.DynamicInvocationViaScopeResolutionInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="NestedNotOperatorsInspection"                  displayName="Nested not operators usage"
        groupName="Code Style"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.NestedNotOperatorsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnnecessaryParenthesesInspection"              displayName="Unnecessary parentheses"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UnnecessaryParenthesesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnnecessarySemicolonInspection"                displayName="Unnecessary semicolon"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UnnecessarySemicolonInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UnnecessaryUseAliasInspection"                 displayName="Unnecessary use aliases"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UnnecessaryUseAliasInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DeclareUseStrictTypesInspection"               displayName="'declare(strict_types=1)' is missing"
        groupName="Code Style"                                    enabledByDefault="true" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictInterfaces.DeclareUseStrictTypesInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="UsingInclusionReturnValueInspection"           displayName="Usage of inclusion return value"
        groupName="Code Style"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.UsingInclusionReturnValueInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="BadExceptionsProcessingInspection"               displayName="Badly organized exception handling"
        groupName="Architecture"                                    enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.BadExceptionsProcessingInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MoreThanThreeArgumentsInspection"                displayName="More than 3 parameters in callable"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.MoreThanThreeArgumentsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="CallableParameterUseCaseInTypeContextInspection" displayName="Callable parameter usage violates definition"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.CallableParameterUseCaseInTypeContextInspection"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ClassReImplementsParentInterfaceInspection"      displayName="Class re-implements interface of a parent class"
        groupName="Architecture"                                    enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.ClassReImplementsParentInterfaceInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="ClassOverridesFieldOfSuperClassInspection"       displayName="Class overrides a field of a parent class"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.ClassOverridesFieldOfSuperClassInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="SingletonFactoryPatternViolationInspection"      displayName="Class violates singleton/factory pattern definition"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.SingletonFactoryPatternViolationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PrivateConstructorSemanticsInspection"           displayName="Private constructor semantics"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.PrivateConstructorSemanticsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="LongInheritanceChainInspection"                  displayName="Long inheritance chain"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.LongInheritanceChainInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="PropertyCanBeStaticInspection"                   displayName="Property could be static"
        groupName="Architecture"                                    enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.PropertyCanBeStaticInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="EmptyClassInspection"                            displayName="Empty class"
        groupName="Architecture"                                    enabledByDefault="false" level="WEAK WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.EmptyClassInspector"/>


    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="AliasFunctionsUsageInspection"                   displayName="Alias functions usage"
        groupName="Compatibility"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.AliasFunctionsUsageInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DeprecatedConstructorStyleInspection"            displayName="Deprecated constructor style"
        groupName="Compatibility"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.DeprecatedConstructorStyleInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="DeprecatedIniOptionsInspection"                  displayName="Deprecated configuration options"
        groupName="Compatibility"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeSmell.DeprecatedIniOptionsInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="RandomApiMigrationInspection"                    displayName="Random API migration"
        groupName="Compatibility"                                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.RandomApiMigrationInspector"/>
    <localInspection language="PHP" groupPath="PHP,Php Inspections (EA Extended)"
        shortName="MktimeUsageInspection"                           displayName="'gmmktime()'/'mktime()' usage"
        groupName="Compatibility"                                   enabledByDefault="true" level="ERROR"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.MktimeUsageInspector"/>

    <!--localInspection language="PHP" groupPath="PHP"
        shortName="StrictArgumentsInspection"                       displayName="Type compatibility: check types of call arguments"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictArgumentsInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictArithmeticInspection"                      displayName="Type compatibility: numeric operands in arithmetic operations"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictArithmeticInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictAssignmentInspection"                      displayName="Type compatibility: match types in assignments"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictAssignmentInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictBitwiseInspection"                         displayName="Type compatibility: integer operands in bitwise operators"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictBitwiseInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictBooleanNotInspection"                      displayName="Type compatibility: boolean operand in logical 'not' operator"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictBooleanNotInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictComparisonInspection"                      displayName="Type compatibility: numeric operands in less/greater comparisons"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictComparisonInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictEqualityInspection"                        displayName="Type compatibility: match types in equality comparisons"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictEqualityInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictIncrementInspection"                       displayName="Type compatibility: increment/decrement of integers only"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictIncrementInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictLogicalInspection"                         displayName="Type compatibility: boolean operands in logical operators"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictLogicalInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictReturnInspection"                          displayName="Type compatibility: check type of return value"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictReturnInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictStringConcatInspection"                    displayName="Type compatibility: string operands in string concatenation"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictStringConcatInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictTernaryInspection"                         displayName="Type compatibility: match types in branches of ternary operator"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="false" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictTernaryInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictUnaryMinusInspection"                      displayName="Type compatibility: numeric operand in unary minus operator"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictUnaryMinusInspector"/>
    <localInspection language="PHP" groupPath="PHP"
        shortName="StrictUnaryPlusInspection"                       displayName="Type compatibility: unary plus operator"
        groupName="Php Inspections (EA Extended)"                   enabledByDefault="true" level="WARNING"
        implementationClass="com.kalessil.phpStorm.phpInspectionsEA.inspectors.strictOperators.StrictUnaryPlusInspector"/-->
  </extensions>

  <application-components>
    <!-- Add your application components here -->
  </application-components>

  <project-components>
    <!-- Add your project components here -->
  </project-components>

  <actions>
    <!-- Add your actions here -->
  </actions>

</idea-plugin>